spring.application.name=Gym
spring.datasource.url=jdbc:mysql://localhost:3306/Gym?createDatabaseIfNotExist=true
# Nom d'utilisateur de la base de donn?es
spring.datasource.username=root
# Mot de passe de la base de donn?es
spring.datasource.password=
### JPA / HIBERNATE ###
# Affiche les requ?tes SQL dans la console
spring.jpa.show-sql=true
# D?finit le comportement de la g?n?ration de sch?ma de base de donn?es
spring.jpa.hibernate.ddl-auto=update
# Configure le dialecte Hibernate pour MySQL
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.jakarta.persistence.validation.mode=none


logging.level.org.springframework.data.jpa.repository=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web=DEBUG
server.port=8082
# OAuth2 Client Configuration
spring.security.oauth2.client.registration.demo.client-id=gym1
spring.security.oauth2.client.registration.demo.client-secret=42HJTCdMrSxHP0uruOtaYDzr3bH8i5Cb
spring.security.oauth2.client.registration.demo.provider=keycloak
spring.security.oauth2.client.registration.demo.scope=openid,profile,email
spring.security.oauth2.client.registration.demo.authorization-grant-type=client_credentials

# Keycloak Provider Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8086/realms/master/
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8086/realms/master/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8086/realms/master/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8086/realms/master/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8086/realms/master/protocol/openid-connect/certs

# CORS Configuration
access.control.origin=http://localhost:4200

# Logging Configuration
logging.level.org.springframework.security=trace
CREATE TABLE app_config (
config_key VARCHAR(255) PRIMARY KEY,
config_value VARCHAR(255),
data_type VARCHAR(20) CHECK(data_type IN ('string', 'number', 'boolean'))
);

INSERT INTO app_config (config_key, config_value, data_type)
VALUES
('access.control.origin', 'http://localhost:4200', 'string'),

('logging.level.org.springframework.security', 'trace', 'string'),

-- Mail Configuration
('mail.host', 'smtp.gmail.com', 'string'),
('mail.port', '587', 'number'),
('mail.username', 'jalelbensassi774@gmail.com', 'string'),
('mail.password', 'thni ditc oqci lfof', 'string'),
('mail.properties.mail.smtp.auth', 'true', 'boolean'),
('mail.properties.mail.smtp.starttls.enable', 'true', 'boolean');

logging.level.org.springframework.mail=DEBUG

